@inherits ComponentBase
@using downr
@using downr.Models
@inject DownrOptions downrOptions

<div class="col-md-6">
    <div class="row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative">
        <div class="col p-4 d-flex flex-column position-static post">
        @if(PostPageModel.PreviousPost != null)
        {
            @if(downrOptions.SiteMode == SiteMode.Blog) { // workshops are effectively backwards so we change the text here
                <strong class="d-inline-block mb-2 text-primary">Previous</strong>
            } else {
                <strong class="d-inline-block mb-2 text-primary">Next</strong>
            }
            <h4 class="mb-0">@PostPageModel.PreviousPost.Title</h4>
             @if(downrOptions.SiteMode == SiteMode.Blog) { // workshops are effectively backwards so we change the text here
                <div class="mb-1 text-muted">@PostPageModel.PreviousPost.PublicationDate.ToString("MMMM dd, yyyy")</div>
            } else {
                <div class="mb-1 text-muted">Phase @PostPageModel.PreviousPost.Phase, Step @PostPageModel.PreviousPost.Step</div>
            }
            <p class="card-text mb-auto">@PostPageModel.PreviousPost.Description</p>
            @if(downrOptions.SiteMode == SiteMode.Blog) { // workshops are effectively backwards so we change the text here
                <NavLink class="stretched-link" href="@($"/posts/{PostPageModel.PreviousPost.Slug}")">Previous</NavLink>
            } else {
                <NavLink class="stretched-link" href="@($"/posts/{PostPageModel.PreviousPost.Slug}")">Next</NavLink>
            }
        }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public PostPageModel PostPageModel { get; set; }
}
