@inherits ComponentBase
@using downr
@using downr.Models
@inject HttpClient Http
@inject DownrOptions options
@inject IJSRuntime JSRuntime

@if(options.ShowTopMostTitleBar)
{
    <header class="blog-header py-3">
    <div class="row flex-nowrap justify-content-between align-items-center">
        <div class="col-4 pt-1">
            <a class="text-muted" href="/feed/rss" target="_blank">Subscribe</a>
        </div>
        <div class="col-4 text-center">
            <a class="blog-header-logo text-dark" href="#">@options.Title</a>
        </div>
        <div class="col-4 d-flex justify-content-end align-items-center">
        </div>
    </div>
</header>
}

@if(options.ShowCategoryMenu)
{
var index = 1;
<div class="nav-scroller py-1 mb-2">
    <nav class="nav d-flex justify-content-between">
        <NavLink class="p-2 text-muted" href="/">Home</NavLink>
        @foreach (var category in Categories)
        {
            var categoryLinkLabel = category;
            
            if(options.SiteMode == SiteMode.Workshop && options.ShowPhaseLabels == true)
            {
                categoryLinkLabel = $"Phase {index}: {category}";
                index += 1;
            }

            <NavLink class="p-2 text-muted" href="@($"/category/{category}")">@categoryLinkLabel</NavLink>
        }
    </nav>
</div>
}

@if(Post == null)
{
<div class="jumbotron p-4 p-md-5 text-white rounded bg-dark">
    <div class="container">
        <div class="row">
            <div class="col-md-9">
                <h1 class="display-4">@options.Title</h1>
                <p class="lead my-3">@options.IndexPageText</p>
            </div>
            <div class="col-md-2">
            @if(!string.IsNullOrEmpty(options.HeaderImage)) {
                <img src="@options.HeaderImage" class="img-fluid" alt="@options.Title">
            }
            </div>
        </div>
    </div>
</div>
}
else
{
<div class="jumbotron p-4 p-md-5 text-white rounded bg-dark">
    <div class="col-md-12 px-0">
        <h1 class="display-4">@Post.Title</h1>
        <p class="lead my-3">@Post.Description</p>
    </div>
</div>
}

@code {
    [Parameter]
    public Models.Post Post { get; set; }

    public List<string> Categories { get; set; } = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        Categories = await Http.GetFromJsonAsync<List<string>>($"{options.RootUrl}/api/categories");
        Categories = Categories.Take(10).ToList(); // take top 10 categories
        string title = options.Title;

        if(Post != null)
        {
            title = string.Format($"{Post.Title} - {title}");
        }

        await JSRuntime.InvokeVoidAsync("setTitle", title);
    }
}
